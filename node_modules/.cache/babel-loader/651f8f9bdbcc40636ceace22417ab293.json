{"ast":null,"code":"import _regeneratorRuntime from \"/Users/muyuanli/livvy/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/muyuanli/livvy/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/muyuanli/livvy/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/muyuanli/livvy/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/muyuanli/livvy/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/muyuanli/livvy/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/muyuanli/livvy/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/muyuanli/livvy/src/App.js\";\nimport React, { Component } from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport Amplify, { API } from 'aws-amplify';\nimport awsmobile from './aws-exports';\nimport { withAuthenticator } from 'aws-amplify-react';\nimport { Button } from 'semantic-ui-react';\nAmplify.configure(awsmobile);\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.getUser =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var response;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return API.get('livvyAPI', '/users');\n\n            case 2:\n              response = _context.sent;\n              console.log(JSON.stringify(response, null, 2));\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n    _this.getAllUsers =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee2() {\n      var response;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return API.get('livvyAPI', '/users/all');\n\n            case 2:\n              response = _context2.sent;\n              console.log(JSON.stringify(response, null, 2));\n\n            case 4:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, this);\n    }));\n    _this.updateUser =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee3() {\n      var body, init, response;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              body = {\n                firstName: \"rawad\",\n                lastName: \"rifai\"\n              };\n              init = {\n                body: body\n              };\n              _context3.next = 4;\n              return API.post('livvyAPI', '/users', init);\n\n            case 4:\n              response = _context3.sent;\n              console.log(JSON.stringify(response, null, 2));\n\n            case 6:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, this);\n    }));\n    _this.getMessage =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee4() {\n      var id, timestamp, response;\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              id = \"rawad;us-west-2:2abc67d6-1f53-4637-b5a7-dd671ee0e704;\";\n              timestamp = \"1548404603473\";\n              _context4.next = 4;\n              return API.get('livvyAPI', '/messages/' + id + \"/\" + timestamp);\n\n            case 4:\n              response = _context4.sent;\n              console.log(JSON.stringify(response, null, 2));\n\n            case 6:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4, this);\n    }));\n    _this.getMessagesWithDate =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee5() {\n      var init, id, response;\n      return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              init = {\n                queryStringParameters: {\n                  \"FROM\": 1548404603473\n                }\n              };\n              id = \"rawad;us-west-2:2abc67d6-1f53-4637-b5a7-dd671ee0e704;\";\n              _context5.next = 4;\n              return API.get('livvyAPI', '/messages/' + id, init);\n\n            case 4:\n              response = _context5.sent;\n              console.log(JSON.stringify(response, null, 2));\n\n            case 6:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5, this);\n    }));\n    _this.putMessage =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee6() {\n      var init, response;\n      return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              init = {\n                body: {\n                  \"to\": [\"rawad\"],\n                  \"message\": \"hello\"\n                }\n              };\n              _context6.next = 3;\n              return API.put('livvyAPI', '/messages', init);\n\n            case 3:\n              response = _context6.sent;\n              console.log(JSON.stringify(response, null, 2));\n\n            case 5:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, _callee6, this);\n    }));\n    _this.updateMessage =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee7() {\n      var body, init, response;\n      return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n        while (1) {\n          switch (_context7.prev = _context7.next) {\n            case 0:\n              body = {\n                ETH: \"999\",\n                BTC: \"456\",\n                XRP: \"123\"\n              };\n              init = {\n                body: body\n              };\n              _context7.next = 4;\n              return API.post('livvyAPI', '/messages', init);\n\n            case 4:\n              response = _context7.sent;\n              console.log(JSON.stringify(response, null, 2));\n\n            case 6:\n            case \"end\":\n              return _context7.stop();\n          }\n        }\n      }, _callee7, this);\n    }));\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }), React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, \"Users\"), React.createElement(Button, {\n        secondary: true,\n        onClick: this.getUser,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, \"get user\"), React.createElement(Button, {\n        secondary: true,\n        onClick: this.getAllUsers,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, \"get all users\"), React.createElement(Button, {\n        secondary: true,\n        onClick: this.updateUser,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, \"update user\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }), React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, \"Messages\"), React.createElement(Button, {\n        secondary: true,\n        onClick: this.putMessage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, \"put message\"), React.createElement(Button, {\n        secondary: true,\n        onClick: this.getMessage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, \"get message\"), React.createElement(Button, {\n        secondary: true,\n        onClick: this.getAllMessages,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, \"get all messages\"), React.createElement(Button, {\n        secondary: true,\n        onClick: this.updateMessage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, \"update message\"));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default withAuthenticator(App, true);","map":{"version":3,"sources":["/Users/muyuanli/livvy/src/App.js"],"names":["React","Component","Amplify","API","awsmobile","withAuthenticator","Button","configure","App","getUser","get","response","console","log","JSON","stringify","getAllUsers","updateUser","body","firstName","lastName","init","post","getMessage","id","timestamp","getMessagesWithDate","queryStringParameters","putMessage","put","updateMessage","ETH","BTC","XRP","getAllMessages"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Amplify, { API } from 'aws-amplify';\nimport awsmobile from './aws-exports';\nimport { withAuthenticator } from 'aws-amplify-react';\nimport { Button } from 'semantic-ui-react'\n\nAmplify.configure(awsmobile);\n\nclass App extends Component {\n\n\n  getUser = async () => {\n    const response = await API.get('livvyAPI', '/users');\n    console.log(JSON.stringify(response, null, 2));\n  }\n\n  getAllUsers = async () => {\n\n    const response = await API.get('livvyAPI', '/users/all');\n    console.log(JSON.stringify(response, null, 2));\n  }\n\n  updateUser = async () => {\n\n    const body = {\n      firstName: \"rawad\",\n      lastName: \"rifai\"\n    };\n\n    let init = {\n      body: body\n    }\n    const response = await API.post('livvyAPI', '/users', init);\n    console.log(JSON.stringify(response, null, 2));\n  }\n\n\n  getMessage = async () => {\n    const id = \"rawad;us-west-2:2abc67d6-1f53-4637-b5a7-dd671ee0e704;\";\n    const timestamp = \"1548404603473\"\n    const response = await API.get('livvyAPI', '/messages/' + id + \"/\" + timestamp);\n    console.log(JSON.stringify(response, null, 2));\n  }\n\n  getMessagesWithDate = async () => {\n\n    let init = {\n      queryStringParameters: {\n        \"FROM\": 1548404603473\n      }\n    }\n\n    const id = \"rawad;us-west-2:2abc67d6-1f53-4637-b5a7-dd671ee0e704;\";\n    const response = await API.get('livvyAPI', '/messages/' + id, init);\n\n    console.log(JSON.stringify(response, null, 2));\n  }\n\n  putMessage = async () => {\n\n    let init = {\n      body: {\n        \"to\": [\"rawad\"],\n        \"message\": \"hello\"\n      }\n    }\n    const response = await API.put('livvyAPI', '/messages', init);\n    console.log(JSON.stringify(response, null, 2));\n  }\n\n  updateMessage = async () => {\n\n    const body = {\n      ETH: \"999\",\n      BTC: \"456\",\n      XRP: \"123\"\n    };\n\n    let init = {\n      body: body\n    }\n    const response = await API.post('livvyAPI', '/messages', init);\n    console.log(JSON.stringify(response, null, 2));\n  }\n\n\n\n\n\n  render() {\n    return (\n      <div className=\"App\">\n\n        <br></br>\n        <h2>Users</h2>\n        <Button secondary onClick={this.getUser}>get user</Button>\n        <Button secondary onClick={this.getAllUsers}>get all users</Button>\n        <Button secondary onClick={this.updateUser}>update user</Button>\n\n        <br></br>\n        <h2>Messages</h2>\n        <Button secondary onClick={this.putMessage}>put message</Button>\n        <Button secondary onClick={this.getMessage}>get message</Button>\n        <Button secondary onClick={this.getAllMessages}>get all messages</Button>\n        <Button secondary onClick={this.updateMessage}>update message</Button>\n\n      </div>\n    );\n  }\n}\n\nexport default withAuthenticator(App, true);\n"]},"metadata":{},"sourceType":"module"}